- name: Ensure the system can use the HTTPS transport for APT.
  stat:
    path: /usr/lib/apt/methods/https
  register: apt_https_transport

- name: Install APT HTTPS transport.
  apt:
    name: "apt-transport-https"
    state: present
    update_cache: yes
  when: not apt_https_transport.stat.exists

- name: Install basic packages
  package:
    name: ['vim','aptitude','bash-completion','tmux','tree','htop','wget','unzip','curl','git']
    state: present
    update_cache: yes

- name: Install Default Java (Debian/Ubuntu)
  apt:
    name: default-jdk
    state: present

- name: Add tomcat group
  group:
    name: tomcat

- name: Add "tomcat" user
  user:
    name: tomcat
    group: tomcat
    home: /opt/tomcat
    createhome: no
    system: yes

- name: Download Tomcat
  get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"

- name: Create a tomcat directory
  file:
    path: /opt/tomcat
    state: directory
    owner: tomcat
    group: tomcat

- name: adding user ubuntu to group tomcat
  user:
    name: ubuntu
    groups: tomcat
    append: yes

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: /opt/tomcat
    owner: tomcat
    group: tomcat
    remote_src: yes
    extra_opts: "--strip-components=1"
    creates: /opt/tomcat/bin

- name: Changing permissions for /opt/tomcat
  file: 
    dest: /opt/tomcat 
    mode: g+rw
    recurse: true

- name: Copy tomcat service file
  template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_service_mgr == "systemd"

- name: Start and enable tomcat
  service:
    daemon_reload: yes
    name: tomcat
    state: started
    enabled: yes
  when: ansible_service_mgr == "systemd"

- name: Set UI access credentials
  template:
    src: tomcat-users.xml.j2
    dest: /opt/tomcat/conf/tomcat-users.xml
  notify: restart tomcat

- name: Set Server settings for dev environment
  template:
    src: server_dev.xml.j2
    dest: /opt/tomcat/conf/server.xml
  when: env == "dev"  
  notify: restart tomcat  

- name: Set Server settings for prod environment
  template:
    src: server_prod.xml.j2
    dest: /opt/tomcat/conf/server.xml
  when: env == "prod"  
  notify: restart tomcat  

- name: Allow access to Manager and Host Manager apps from any IP
  template:
    src: context.xml.j2 
    dest: "{{ item }}"
  with_items:
    - /opt/tomcat/webapps/host-manager/META-INF/context.xml
    - /opt/tomcat/webapps/manager/META-INF/context.xml
  notify: restart tomcat

- name: Copy web.xml
  template:
    src: web.xml.j2
    dest: /opt/tomcat/conf/web.xml
  notify: restart tomcat   

- name: Copy context.xml
  template:
    src: context_conf.xml.j2
    dest: /opt/tomcat/conf/context.xml
  notify: restart tomcat
